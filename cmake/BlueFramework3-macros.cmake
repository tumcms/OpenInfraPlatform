macro(findInclude Module)
	string(TOUPPER ${Module} Module2)	
	
	unset("BLUEFRAMEWORK3_${Module2}_INCLUDE_DIR" CACHE)
	find_path("BLUEFRAMEWORK3_${Module2}_INCLUDE_DIR" NAMES BlueFramework/${Module}/namespace.h HINTS ${BlueFramework3_DIR}/include ${BlueFramework3_DIR}/${Module}/src)	
	set(BLUEFRAMEWORK3_INCLUDE_DIR ${BLUEFRAMEWORK3_INCLUDE_DIR} "${BLUEFRAMEWORK3_${Module2}_INCLUDE_DIR}")
endmacro()

macro(findLibs Module)
	string(TOUPPER ${Module} Module2)
	
	unset("BLUEFRAMEWORK3_${Module2}_LIBRARY_DEBUG" CACHE)
	find_file("BLUEFRAMEWORK3_${Module2}_LIBRARY_DEBUG" BlueFramework.${Module}d.lib PATHS ${BLUEFRAMEWORK3_LIBRARY_DIR}/Debug)
	
	unset("BLUEFRAMEWORK3_${Module2}_LIBRARY_RELEASE" CACHE)
	find_file("BLUEFRAMEWORK3_${Module2}_LIBRARY_RELEASE" BlueFramework.${Module}.lib PATHS ${BLUEFRAMEWORK3_LIBRARY_DIR}/Release)
	
	unset("BLUEFRAMEWORK3_${Module2}_LIBRARY_RELWITHDEBINFO" CACHE)
	find_file("BLUEFRAMEWORK3_${Module2}_LIBRARY_RELWITHDEBINFO" BlueFramework.${Module}.lib PATHS ${BLUEFRAMEWORK3_LIBRARY_DIR}/RelWithDebInfo)
	
	set(BLUEFRAMEWORK3_${Module2}_LIBRARY debug "${BLUEFRAMEWORK3_${Module2}_LIBRARY_DEBUG}" optimized "${BLUEFRAMEWORK3_${Module2}_LIBRARY_RELEASE}")
	set(BLUEFRAMEWORK3_LIBRARIES ${BLUEFRAMEWORK3_LIBRARIES} "${BLUEFRAMEWORK3_${Module2}_LIBRARY}")
endmacro()

macro(findBinaries Module)
	string(TOUPPER ${Module} Module2)
	
	unset("BLUEFRAMEWORK3_${Module2}_DLL_DEBUG" CACHE)
	unset("BLUEFRAMEWORK3_${Module2}_DLL_RELEASE" CACHE)
	unset("BLUEFRAMEWORK3_${Module2}_DLL_RELWITHDEBINFO" CACHE)	
	find_file("BLUEFRAMEWORK3_${Module2}_DLL_DEBUG" BlueFramework.${Module}d.dll PATHS ${BLUEFRAMEWORK3_LIBRARY_DIR}/Debug)
	find_file("BLUEFRAMEWORK3_${Module2}_DLL_RELEASE" BlueFramework.${Module}.dll PATHS ${BLUEFRAMEWORK3_LIBRARY_DIR}/Release)
	find_file("BLUEFRAMEWORK3_${Module2}_DLL_RELWITHDEBINFO" BlueFramework.${Module}.dll PATHS ${BLUEFRAMEWORK3_LIBRARY_DIR}/RelWithDebInfo)
	
	
	unset("BLUEFRAMEWORK3_${Module2}_PDB_DEBUG" CACHE)
	unset("BLUEFRAMEWORK3_${Module2}_PDB_RELWITHDEBINFO" CACHE)
	find_file("BLUEFRAMEWORK3_${Module2}_PDB_DEBUG" BlueFramework.${Module}d.pdb PATHS ${BLUEFRAMEWORK3_LIBRARY_DIR}/Debug)
	find_file("BLUEFRAMEWORK3_${Module2}_PDB_RELWITHDEBINFO" BlueFramework.${Module}.pdb PATHS ${BLUEFRAMEWORK3_LIBRARY_DIR}/RelWithDebInfo)
	
	set(BLUEFRAMEWORK3_DEBUG_BINARIES ${BLUEFRAMEWORK3_DEBUG_BINARIES} "${BLUEFRAMEWORK3_${Module2}_DLL_DEBUG}" "${BLUEFRAMEWORK3_${Module2}_PDB_DEBUG}")
	set(BLUEFRAMEWORK3_RELEASE_BINARIES ${BLUEFRAMEWORK3_RELEASE_BINARIES} "${BLUEFRAMEWORK3_${Module2}_DLL_RELEASE}")
	set(BLUEFRAMEWORK3_RELWITHDEBINFO_BINARIES ${BLUEFRAMEWORK3_RELWITHDEBINFO_BINARIES} "${BLUEFRAMEWORK3_${Module2}_DLL_RELWITHDEBINFO}" "${BLUEFRAMEWORK3_${Module2}_PDB_RELWITHDEBINFO}")
endmacro()

function(BLUEFRAMEWORK3_COPY_BINARIES TargetDirectory)
	add_custom_target(BlueFramework3CopyBinaries
		COMMENT "Copying BlueFramwork binaries to '${TargetDirectory}'" VERBATIM
		COMMAND ${CMAKE_COMMAND} -E copy ${BLUEFRAMEWORK3_DEBUG_BINARIES} ${CMAKE_BINARY_DIR}/Debug
		COMMAND ${CMAKE_COMMAND} -E copy ${BLUEFRAMEWORK3_RELEASE_BINARIES} ${CMAKE_BINARY_DIR}/Release
		COMMAND ${CMAKE_COMMAND} -E copy ${BLUEFRAMEWORK3_RELWITHDEBINFO_BINARIES} ${CMAKE_BINARY_DIR}/RelWithDebInfo
	)
endfunction(BLUEFRAMEWORK3_COPY_BINARIES)